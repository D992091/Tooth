/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package package1;

import java.awt.Color;
import java.sql.PreparedStatement;
import java.sql.ResultSet;
import java.sql.SQLException;
import java.util.ArrayList;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JFrame;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author Daniil
 */
public class FifthForm extends javax.swing.JFrame
{
public static  DefaultTableModel model1 ;
public static DB db;
    public FifthForm()
    {
        initComponents();
        setExtendedState(JFrame.MAXIMIZED_BOTH);
        getContentPane().setBackground(new Color(0,153,153));
        try
    {
        db = new DB();
        model1 = new DefaultTableModel();
        model1.addColumn("Код акции");
        model1.addColumn("Содержание акции");
        model1.addColumn("Дата начала акции");
        model1.addColumn("Дата окончания акции");
        model1.addColumn("Бонус");
        model1.addColumn("День недели");
        PreparedStatement ps;
        try
        {    ps = db.getConnection().prepareStatement("select act_id,act_name,act_start,act_finish,act_bonus,act_day from actions");
             ResultSet rs = ps.executeQuery();
        while (rs.next()){
            model1.addRow(new Object[]{rs.getString("act_id"),rs.getString("act_name"),rs.getString("act_start"),rs.getString("act_finish"),rs.getString("act_bonus"),rs.getString("act_day")});
        }
        }
        catch (SQLException ex)
        {
            Logger.getLogger(FifthForm.class.getName()).log(Level.SEVERE, null, ex);
        }
         jTable1.setModel(model1);
    }
    catch (ClassNotFoundException ex)
    {
        Logger.getLogger(FifthForm.class.getName()).log(Level.SEVERE, null, ex);
    }
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents()
    {

        buttonGroup1 = new javax.swing.ButtonGroup();
        jRadioButton1 = new javax.swing.JRadioButton();
        jRadioButton2 = new javax.swing.JRadioButton();
        jRadioButton3 = new javax.swing.JRadioButton();
        jRadioButton4 = new javax.swing.JRadioButton();
        jRadioButton5 = new javax.swing.JRadioButton();
        jRadioButton6 = new javax.swing.JRadioButton();
        jRadioButton7 = new javax.swing.JRadioButton();
        jRadioButton8 = new javax.swing.JRadioButton();
        jRadioButton9 = new javax.swing.JRadioButton();
        jScrollPane1 = new javax.swing.JScrollPane();
        jTable1 = new javax.swing.JTable();
        jButton1 = new javax.swing.JButton();
        jButton2 = new javax.swing.JButton();
        jButton3 = new javax.swing.JButton();
        jButton4 = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        jRadioButton1.setBackground(new java.awt.Color(0, 153, 153));
        buttonGroup1.add(jRadioButton1);
        jRadioButton1.setFont(new java.awt.Font("Calibri Light", 0, 14)); // NOI18N
        jRadioButton1.setSelected(true);
        jRadioButton1.setText("actions");
        jRadioButton1.addActionListener(new java.awt.event.ActionListener()
        {
            public void actionPerformed(java.awt.event.ActionEvent evt)
            {
                jRadioButton1ActionPerformed(evt);
            }
        });

        jRadioButton2.setBackground(new java.awt.Color(0, 153, 153));
        buttonGroup1.add(jRadioButton2);
        jRadioButton2.setFont(new java.awt.Font("Calibri Light", 0, 14)); // NOI18N
        jRadioButton2.setText("checks");
        jRadioButton2.addActionListener(new java.awt.event.ActionListener()
        {
            public void actionPerformed(java.awt.event.ActionEvent evt)
            {
                jRadioButton2ActionPerformed(evt);
            }
        });

        jRadioButton3.setBackground(new java.awt.Color(0, 153, 153));
        buttonGroup1.add(jRadioButton3);
        jRadioButton3.setFont(new java.awt.Font("Calibri Light", 0, 14)); // NOI18N
        jRadioButton3.setText("compl");
        jRadioButton3.addActionListener(new java.awt.event.ActionListener()
        {
            public void actionPerformed(java.awt.event.ActionEvent evt)
            {
                jRadioButton3ActionPerformed(evt);
            }
        });

        jRadioButton4.setBackground(new java.awt.Color(0, 153, 153));
        buttonGroup1.add(jRadioButton4);
        jRadioButton4.setFont(new java.awt.Font("Calibri Light", 0, 14)); // NOI18N
        jRadioButton4.setText("discount");
        jRadioButton4.addActionListener(new java.awt.event.ActionListener()
        {
            public void actionPerformed(java.awt.event.ActionEvent evt)
            {
                jRadioButton4ActionPerformed(evt);
            }
        });

        jRadioButton5.setBackground(new java.awt.Color(0, 153, 153));
        buttonGroup1.add(jRadioButton5);
        jRadioButton5.setFont(new java.awt.Font("Calibri Light", 0, 14)); // NOI18N
        jRadioButton5.setText("employee");
        jRadioButton5.addActionListener(new java.awt.event.ActionListener()
        {
            public void actionPerformed(java.awt.event.ActionEvent evt)
            {
                jRadioButton5ActionPerformed(evt);
            }
        });

        jRadioButton6.setBackground(new java.awt.Color(0, 153, 153));
        buttonGroup1.add(jRadioButton6);
        jRadioButton6.setFont(new java.awt.Font("Calibri Light", 0, 14)); // NOI18N
        jRadioButton6.setText("patient");
        jRadioButton6.addActionListener(new java.awt.event.ActionListener()
        {
            public void actionPerformed(java.awt.event.ActionEvent evt)
            {
                jRadioButton6ActionPerformed(evt);
            }
        });

        jRadioButton7.setBackground(new java.awt.Color(0, 153, 153));
        buttonGroup1.add(jRadioButton7);
        jRadioButton7.setFont(new java.awt.Font("Calibri Light", 0, 14)); // NOI18N
        jRadioButton7.setText("records");
        jRadioButton7.addActionListener(new java.awt.event.ActionListener()
        {
            public void actionPerformed(java.awt.event.ActionEvent evt)
            {
                jRadioButton7ActionPerformed(evt);
            }
        });

        jRadioButton8.setBackground(new java.awt.Color(0, 153, 153));
        buttonGroup1.add(jRadioButton8);
        jRadioButton8.setFont(new java.awt.Font("Calibri Light", 0, 14)); // NOI18N
        jRadioButton8.setText("schedule");
        jRadioButton8.addActionListener(new java.awt.event.ActionListener()
        {
            public void actionPerformed(java.awt.event.ActionEvent evt)
            {
                jRadioButton8ActionPerformed(evt);
            }
        });

        jRadioButton9.setBackground(new java.awt.Color(0, 153, 153));
        buttonGroup1.add(jRadioButton9);
        jRadioButton9.setFont(new java.awt.Font("Calibri Light", 0, 14)); // NOI18N
        jRadioButton9.setText("services");
        jRadioButton9.addActionListener(new java.awt.event.ActionListener()
        {
            public void actionPerformed(java.awt.event.ActionEvent evt)
            {
                jRadioButton9ActionPerformed(evt);
            }
        });

        jTable1.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][]
            {
                {},
                {},
                {},
                {}
            },
            new String []
            {

            }
        ));
        jScrollPane1.setViewportView(jTable1);

        jButton1.setText("Выход");
        jButton1.addActionListener(new java.awt.event.ActionListener()
        {
            public void actionPerformed(java.awt.event.ActionEvent evt)
            {
                jButton1ActionPerformed(evt);
            }
        });

        jButton2.setText("Изменить");
        jButton2.setToolTipText("");
        jButton2.addActionListener(new java.awt.event.ActionListener()
        {
            public void actionPerformed(java.awt.event.ActionEvent evt)
            {
                jButton2ActionPerformed(evt);
            }
        });

        jButton3.setText("Удалить");
        jButton3.addActionListener(new java.awt.event.ActionListener()
        {
            public void actionPerformed(java.awt.event.ActionEvent evt)
            {
                jButton3ActionPerformed(evt);
            }
        });

        jButton4.setText("Добавить");
        jButton4.addActionListener(new java.awt.event.ActionListener()
        {
            public void actionPerformed(java.awt.event.ActionEvent evt)
            {
                jButton4ActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(22, 22, 22)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                        .addComponent(jRadioButton9)
                        .addComponent(jRadioButton8)
                        .addComponent(jRadioButton7)
                        .addComponent(jRadioButton6)
                        .addComponent(jRadioButton5)
                        .addComponent(jRadioButton4)
                        .addComponent(jRadioButton3)
                        .addComponent(jRadioButton2))
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jRadioButton1)
                        .addGap(18, 18, 18)))
                .addGap(40, 40, 40)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 1160, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jButton1, javax.swing.GroupLayout.PREFERRED_SIZE, 100, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(156, 156, 156)
                        .addComponent(jButton2, javax.swing.GroupLayout.PREFERRED_SIZE, 159, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(125, 125, 125)
                        .addComponent(jButton3, javax.swing.GroupLayout.PREFERRED_SIZE, 192, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(127, 127, 127)
                        .addComponent(jButton4, javax.swing.GroupLayout.PREFERRED_SIZE, 150, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap(616, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(24, 24, 24)
                        .addComponent(jRadioButton1)
                        .addGap(69, 69, 69)
                        .addComponent(jRadioButton2)
                        .addGap(69, 69, 69)
                        .addComponent(jRadioButton3)
                        .addGap(69, 69, 69)
                        .addComponent(jRadioButton4)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(jRadioButton5)
                        .addGap(56, 56, 56)
                        .addComponent(jRadioButton6)
                        .addGap(69, 69, 69)
                        .addComponent(jRadioButton7)
                        .addGap(69, 69, 69)
                        .addComponent(jRadioButton8)
                        .addGap(66, 66, 66))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addContainerGap(120, Short.MAX_VALUE)
                        .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 622, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(31, 31, 31)))
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jRadioButton9)
                    .addComponent(jButton1)
                    .addComponent(jButton2)
                    .addComponent(jButton3)
                    .addComponent(jButton4))
                .addGap(20, 20, 20))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void jRadioButton1ActionPerformed(java.awt.event.ActionEvent evt)//GEN-FIRST:event_jRadioButton1ActionPerformed
    {//GEN-HEADEREND:event_jRadioButton1ActionPerformed
    try
    {
        db = new DB();
        model1 = new DefaultTableModel();
        model1.addColumn("Код акции");
        model1.addColumn("Содержание акции");
        model1.addColumn("Дата начала акции");
        model1.addColumn("Дата окончания акции");
        model1.addColumn("Бонус");
        model1.addColumn("День недели");
        PreparedStatement ps;
        try
        {
            ps = db.getConnection().prepareStatement("select act_id,act_name,act_start,act_finish,act_bonus,act_day from actions");
             ResultSet rs = ps.executeQuery();
        while (rs.next()){
            model1.addRow(new Object[]{rs.getString("act_id"),rs.getString("act_name"),rs.getString("act_start"),rs.getString("act_finish"),rs.getString("act_bonus"),rs.getString("act_day")});
        }
        }
        catch (SQLException ex)
        {
            Logger.getLogger(FifthForm.class.getName()).log(Level.SEVERE, null, ex);
        }
       jTable1.setModel(model1);
    }
    catch (ClassNotFoundException ex)
    {
        Logger.getLogger(FifthForm.class.getName()).log(Level.SEVERE, null, ex);
    }
    }//GEN-LAST:event_jRadioButton1ActionPerformed

    private void jRadioButton4ActionPerformed(java.awt.event.ActionEvent evt)//GEN-FIRST:event_jRadioButton4ActionPerformed
    {//GEN-HEADEREND:event_jRadioButton4ActionPerformed
       try
    {
        db = new DB();
                model1 = new DefaultTableModel();
        model1.addColumn("Код скидки");
        model1.addColumn("Содержание скидки");
        model1.addColumn("Размер скидки,%");
        model1.addColumn("Категория");
        PreparedStatement ps;
        try
        {
           ps = db.getConnection().prepareStatement("select disc_id,disc_name,disc_size,category from discount");
        ResultSet rs = ps.executeQuery();
       while (rs.next()){
           model1.addRow(new Object[]{rs.getString("disc_id"),rs.getString("disc_name"),rs.getString("disc_size"),rs.getString("category")});
       }
        }
        catch (SQLException ex)
        {
            Logger.getLogger(FifthForm.class.getName()).log(Level.SEVERE, null, ex);
        }
       jTable1.setModel(model1);
    }
    catch (ClassNotFoundException ex)
    {
        Logger.getLogger(FifthForm.class.getName()).log(Level.SEVERE, null, ex);
    }
    }//GEN-LAST:event_jRadioButton4ActionPerformed

    private void jRadioButton5ActionPerformed(java.awt.event.ActionEvent evt)//GEN-FIRST:event_jRadioButton5ActionPerformed
    {//GEN-HEADEREND:event_jRadioButton5ActionPerformed
        try
    {
        db = new DB();
        model1 = new DefaultTableModel();
        model1.addColumn("Код сотрудника");
        model1.addColumn("Фамилия");
        model1.addColumn("Имя");
        model1.addColumn("Отчество");
        model1.addColumn("Статус");
         model1.addColumn("Пароль");
        PreparedStatement ps;
        try
        {
           ps = db.getConnection().prepareStatement("select id,fname,lnam,mname,status,password from employee");
        ResultSet rs = ps.executeQuery();
       while (rs.next()){
           model1.addRow(new Object[]{rs.getString("id"),rs.getString("fname"),rs.getString("lnam"),rs.getString("mname"),rs.getString("status"),rs.getString("password")});
       }
        }
        catch (SQLException ex)
        {
            Logger.getLogger(FifthForm.class.getName()).log(Level.SEVERE, null, ex);
        }
       jTable1.setModel(model1);
    }
    catch (ClassNotFoundException ex)
    {
        Logger.getLogger(FifthForm.class.getName()).log(Level.SEVERE, null, ex);
    }
    }//GEN-LAST:event_jRadioButton5ActionPerformed

    private void jRadioButton6ActionPerformed(java.awt.event.ActionEvent evt)//GEN-FIRST:event_jRadioButton6ActionPerformed
    {//GEN-HEADEREND:event_jRadioButton6ActionPerformed
          try
    {
        db = new DB();
        model1 = new DefaultTableModel();
        model1.addColumn("Код пациента");
        model1.addColumn("Фамилия");
        model1.addColumn("Имя");
        model1.addColumn("Отчество");
        model1.addColumn("Дата рождения");
         model1.addColumn("Адрес");
         model1.addColumn("Пол");
        PreparedStatement ps;
        try
        {
           ps = db.getConnection().prepareStatement("select patient_id,patient_fname,patient_lname,patient_mname,birthdate,address,gender from patient");
        ResultSet rs = ps.executeQuery();
       while (rs.next()){
           model1.addRow(new Object[]{rs.getString("patient_id"),rs.getString("patient_fname"),rs.getString("patient_lname"),rs.getString("patient_mname"),rs.getString("birthdate"),rs.getString("address"),rs.getString("gender")});
       }
        }
        catch (SQLException ex)
        {
            Logger.getLogger(FifthForm.class.getName()).log(Level.SEVERE, null, ex);
        }
       jTable1.setModel(model1);
    }
    catch (ClassNotFoundException ex)
    {
        Logger.getLogger(FifthForm.class.getName()).log(Level.SEVERE, null, ex);
    }  
        
    }//GEN-LAST:event_jRadioButton6ActionPerformed

    private void jRadioButton2ActionPerformed(java.awt.event.ActionEvent evt)//GEN-FIRST:event_jRadioButton2ActionPerformed
    {//GEN-HEADEREND:event_jRadioButton2ActionPerformed
        try
    {
        db = new DB();
        model1 = new DefaultTableModel();
        model1.addColumn("Код чека");
        model1.addColumn("ФИО пациента");
        model1.addColumn("ФИО доктора");
        model1.addColumn("Дата записи");
        model1.addColumn("Время записи");
         model1.addColumn("Услуга");
         model1.addColumn("Скидка");
        model1.addColumn("Акция");
        model1.addColumn("Общая сумма");
        model1.addColumn("Внесённая сумма");
         model1.addColumn("Сдача");

        PreparedStatement ps;
        try
        {
           ps = db.getConnection().prepareStatement("select id_check,FIO,doctor,summ,inp,ost,service,date,time,disc,act from checks");
        ResultSet rs = ps.executeQuery();
       while (rs.next()){
           model1.addRow(new Object[]{rs.getString("id_check"),rs.getString("FIO"),rs.getString("doctor"),rs.getString("date"),rs.getString("time"),rs.getString("service"),rs.getString("disc"),rs.getString("act"),rs.getString("summ"),rs.getString("inp"),rs.getString("ost")});
       }
        }
        catch (SQLException ex)
        {
            Logger.getLogger(FifthForm.class.getName()).log(Level.SEVERE, null, ex);
        }
       jTable1.setModel(model1);
    }
    catch (ClassNotFoundException ex)
    {
        Logger.getLogger(FifthForm.class.getName()).log(Level.SEVERE, null, ex);
    }  
    }//GEN-LAST:event_jRadioButton2ActionPerformed

    private void jRadioButton3ActionPerformed(java.awt.event.ActionEvent evt)//GEN-FIRST:event_jRadioButton3ActionPerformed
    {//GEN-HEADEREND:event_jRadioButton3ActionPerformed
         try
    {
        db = new DB();
        model1 = new DefaultTableModel();
        model1.addColumn("Код сеанса");
        model1.addColumn("ФИО пациента");
        model1.addColumn("ФИО доктора");
        model1.addColumn("Дата записи");
        model1.addColumn("Время записи");
         model1.addColumn("Услуга");
         model1.addColumn("Комментарий");

        PreparedStatement ps;
        try
        {
           ps = db.getConnection().prepareStatement("select id_compl,pat,doc,serv,dat,tim,comm from compl");
        ResultSet rs = ps.executeQuery();
       while (rs.next()){
           model1.addRow(new Object[]{rs.getString("id_compl"),rs.getString("pat"),rs.getString("doc"),rs.getString("dat"),rs.getString("tim"),rs.getString("serv"),rs.getString("comm")});
       }
        }
        catch (SQLException ex)
        {
            Logger.getLogger(FifthForm.class.getName()).log(Level.SEVERE, null, ex);
        }
       jTable1.setModel(model1);
    }
    catch (ClassNotFoundException ex)
    {
        Logger.getLogger(FifthForm.class.getName()).log(Level.SEVERE, null, ex);
    }  
    }//GEN-LAST:event_jRadioButton3ActionPerformed

    private void jRadioButton9ActionPerformed(java.awt.event.ActionEvent evt)//GEN-FIRST:event_jRadioButton9ActionPerformed
    {//GEN-HEADEREND:event_jRadioButton9ActionPerformed
          try
    {
        db = new DB();
                model1 = new DefaultTableModel();
        model1.addColumn("Код услуги");
        model1.addColumn("Наименование услуги");
        model1.addColumn("Стоимость");
        model1.addColumn("Тип услуги");
        PreparedStatement ps;
        try
        {
           ps = db.getConnection().prepareStatement("select service_id,service_name,service_price,service_type from services");
        ResultSet rs = ps.executeQuery();
       while (rs.next()){
           model1.addRow(new Object[]{rs.getString("service_id"),rs.getString("service_name"),rs.getString("service_price"),rs.getString("service_type")});
       }
        }
        catch (SQLException ex)
        {
            Logger.getLogger(FifthForm.class.getName()).log(Level.SEVERE, null, ex);
        }
       jTable1.setModel(model1);
    }
    catch (ClassNotFoundException ex)
    {
        Logger.getLogger(FifthForm.class.getName()).log(Level.SEVERE, null, ex);
    }
    }//GEN-LAST:event_jRadioButton9ActionPerformed

    private void jRadioButton8ActionPerformed(java.awt.event.ActionEvent evt)//GEN-FIRST:event_jRadioButton8ActionPerformed
    {//GEN-HEADEREND:event_jRadioButton8ActionPerformed
        try
    {
        db = new DB();
        model1 = new DefaultTableModel();
        model1.addColumn("Код записи");
        model1.addColumn("ФИО врача");
        model1.addColumn("Дата смены");
        model1.addColumn("Время смены");
        model1.addColumn("Статус");
        PreparedStatement ps;
        try
        {
            ps = db.getConnection().prepareStatement("select id_schedule,FIO_doct,sch_date,sch_time,status from schedule");
             ResultSet rs = ps.executeQuery();
        while (rs.next()){
            model1.addRow(new Object[]{rs.getString("id_schedule"),rs.getString("FIO_doct"),rs.getString("sch_date"),rs.getString("sch_time"),rs.getString("status")});
        }
        }
        catch (SQLException ex)
        {
            Logger.getLogger(FifthForm.class.getName()).log(Level.SEVERE, null, ex);
        }
       jTable1.setModel(model1);
    }
    catch (ClassNotFoundException ex)
    {
        Logger.getLogger(FifthForm.class.getName()).log(Level.SEVERE, null, ex);
    }
    }//GEN-LAST:event_jRadioButton8ActionPerformed

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt)//GEN-FIRST:event_jButton1ActionPerformed
    {//GEN-HEADEREND:event_jButton1ActionPerformed
        dispose();
        FirstForm fm = new FirstForm();
        fm.setVisible(true);
    }//GEN-LAST:event_jButton1ActionPerformed

    private void jRadioButton7ActionPerformed(java.awt.event.ActionEvent evt)//GEN-FIRST:event_jRadioButton7ActionPerformed
    {//GEN-HEADEREND:event_jRadioButton7ActionPerformed
         try
    {
        db = new DB();
        model1 = new DefaultTableModel();
        model1.addColumn("Код записи");
        model1.addColumn("ФИО пациента");
        model1.addColumn("ФИО доктора");
        model1.addColumn("Дата записи");
        model1.addColumn("Время записи");
         model1.addColumn("Услуга");
         model1.addColumn("Скидка");
        model1.addColumn("Акция");
        model1.addColumn("Комментарий");
        model1.addColumn("Статус оплаты");
         model1.addColumn("Статус выполнения");

        PreparedStatement ps;
        try
        {
           ps = db.getConnection().prepareStatement("select id_record,patient,doct,paid_status,comp_status,comment,service,dat,tim,disc,act from records");
        ResultSet rs = ps.executeQuery();
       while (rs.next()){
           model1.addRow(new Object[]{rs.getString("id_record"),rs.getString("patient"),rs.getString("doct"),rs.getString("dat"),rs.getString("tim"),rs.getString("service"),rs.getString("disc"),rs.getString("act"),rs.getString("comment"),rs.getString("paid_status"),rs.getString("comp_status")});
       }
        }
        catch (SQLException ex)
        {
            Logger.getLogger(FifthForm.class.getName()).log(Level.SEVERE, null, ex);
        }
       jTable1.setModel(model1);
    }
    catch (ClassNotFoundException ex)
    {
        Logger.getLogger(FifthForm.class.getName()).log(Level.SEVERE, null, ex);
    }  
    }//GEN-LAST:event_jRadioButton7ActionPerformed

    private void jButton2ActionPerformed(java.awt.event.ActionEvent evt)//GEN-FIRST:event_jButton2ActionPerformed
    {//GEN-HEADEREND:event_jButton2ActionPerformed

        System.out.println(jTable1.getSelectedRow());
        System.out.println(jTable1.getSelectedColumn());
        if(jRadioButton1.isSelected()){
            String id = jTable1.getValueAt(jTable1.getSelectedRow(), 0).toString() ;
            System.out.println(jTable1.getValueAt(jTable1.getSelectedRow(), 0));
            ArrayList<String> list = new ArrayList<String>();
            for(int i =0 ; i < jTable1.getColumnCount();i++){
                list.add(jTable1.getValueAt(jTable1.getSelectedRow(), i).toString());
            }
            PreparedStatement ps;
        try
        {
           ps = db.getConnection().prepareStatement("delete from actions where act_id = ? ");
           ps.setString(1,id);
        ps.execute();
        ps = db.getConnection().prepareStatement("insert into actions(act_id,act_name,act_start,act_finish,act_bonus,act_day) values (?,?,?,?,?,?)");
        ps.setString(1, list.get(0));
        ps.setString(2, list.get(1));
        ps.setString(3, list.get(2));
        ps.setString(4, list.get(3));
        ps.setString(5, list.get(4));
        ps.setString(6, list.get(5));
       ps.execute();
        }
        catch (SQLException ex)
        {
            Logger.getLogger(FifthForm.class.getName()).log(Level.SEVERE, null, ex);
        }
        }
        if(jRadioButton2.isSelected()){
            String id = jTable1.getValueAt(jTable1.getSelectedRow(), 0).toString() ;
            System.out.println(jTable1.getValueAt(jTable1.getSelectedRow(), 0));
            ArrayList<String> list = new ArrayList<String>();
            for(int i =0 ; i < jTable1.getColumnCount();i++){
                list.add(jTable1.getValueAt(jTable1.getSelectedRow(), i).toString());
            }
            PreparedStatement ps;
        try
        {
           ps = db.getConnection().prepareStatement("delete from checks where id_check = ? ");
           ps.setString(1,id);
        ps.execute();
        ps = db.getConnection().prepareStatement("insert into checks(id_check,FIO,doctor,summ,inp,ost,service,date,time,disc,act) values (?,?,?,?,?,?,?,?,?,?,?)");
        ps.setString(1, list.get(0));
        ps.setString(2, list.get(1));
        ps.setString(3, list.get(2));
        ps.setString(4, list.get(8));
        ps.setString(5, list.get(9));
        ps.setString(6, list.get(10));
        ps.setString(7, list.get(5));
        ps.setString(8, list.get(3));
        ps.setString(9, list.get(4));
        ps.setString(10, list.get(6));
        ps.setString(11, list.get(7));
       ps.execute();
        }
        catch (SQLException ex)
        {
            Logger.getLogger(FifthForm.class.getName()).log(Level.SEVERE, null, ex);
        }
        }
        if(jRadioButton3.isSelected()){
            String id = jTable1.getValueAt(jTable1.getSelectedRow(), 0).toString() ;
            System.out.println(jTable1.getValueAt(jTable1.getSelectedRow(), 0));
            ArrayList<String> list = new ArrayList<String>();
            for(int i =0 ; i < jTable1.getColumnCount();i++){
                list.add(jTable1.getValueAt(jTable1.getSelectedRow(), i).toString());
            }
            PreparedStatement ps;
        try
        {
           ps = db.getConnection().prepareStatement("delete from compl where id_compl = ? ");
           ps.setString(1,id);
        ps.execute();
        ps = db.getConnection().prepareStatement("insert into compl(id_compl,pat,doc,serv,dat,tim,comm) values (?,?,?,?,?,?,?)");
        ps.setString(1, list.get(0));
        ps.setString(2, list.get(1));
        ps.setString(3, list.get(2));
        ps.setString(4, list.get(5));
        ps.setString(5, list.get(3));
        ps.setString(6, list.get(4));
        ps.setString(7, list.get(6));
       ps.execute();
        }
        catch (SQLException ex)
        {
            Logger.getLogger(FifthForm.class.getName()).log(Level.SEVERE, null, ex);
        }
        }
        if(jRadioButton4.isSelected()){
            String id = jTable1.getValueAt(jTable1.getSelectedRow(), 0).toString() ;
            System.out.println(jTable1.getValueAt(jTable1.getSelectedRow(), 0));
            ArrayList<String> list = new ArrayList<String>();
            for(int i =0 ; i < jTable1.getColumnCount();i++){
                list.add(jTable1.getValueAt(jTable1.getSelectedRow(), i).toString());
            }
            PreparedStatement ps;
        try
        {
           ps = db.getConnection().prepareStatement("delete from discount where disc_id = ? ");
           ps.setString(1,id);
        ps.execute();
        ps = db.getConnection().prepareStatement("insert into discount(disc_id,disc_name,disc_size,category) values (?,?,?,?)");
        ps.setString(1, list.get(0));
        ps.setString(2, list.get(1));
        ps.setString(3, list.get(2));
        ps.setString(4, list.get(3));
       ps.execute();
        }
        catch (SQLException ex)
        {
            Logger.getLogger(FifthForm.class.getName()).log(Level.SEVERE, null, ex);
        }
        }
        if(jRadioButton5.isSelected()){
            String id = jTable1.getValueAt(jTable1.getSelectedRow(), 0).toString() ;
            System.out.println(jTable1.getValueAt(jTable1.getSelectedRow(), 0));
            ArrayList<String> list = new ArrayList<String>();
            for(int i =0 ; i < jTable1.getColumnCount();i++){
                list.add(jTable1.getValueAt(jTable1.getSelectedRow(), i).toString());
            }
            PreparedStatement ps;
        try
        {
           ps = db.getConnection().prepareStatement("delete from employee where id = ? ");
           ps.setString(1,id);
        ps.execute();
        ps = db.getConnection().prepareStatement("insert into employee(id,fname,lnam,mname,status,password) values (?,?,?,?,?,?)");
        ps.setString(1, list.get(0));
        ps.setString(2, list.get(1));
        ps.setString(3, list.get(2));
        ps.setString(4, list.get(3));
        ps.setString(5, list.get(4));
        ps.setString(6, list.get(5));
       ps.execute();
        }
        catch (SQLException ex)
        {
            Logger.getLogger(FifthForm.class.getName()).log(Level.SEVERE, null, ex);
        }
        }
        if(jRadioButton6.isSelected()){
            String id = jTable1.getValueAt(jTable1.getSelectedRow(), 0).toString() ;
            System.out.println(jTable1.getValueAt(jTable1.getSelectedRow(), 0));
            ArrayList<String> list = new ArrayList<String>();
            for(int i =0 ; i < jTable1.getColumnCount();i++){
                list.add(jTable1.getValueAt(jTable1.getSelectedRow(), i).toString());
            }
            PreparedStatement ps;
        try
        {
           ps = db.getConnection().prepareStatement("delete from patient where patient_id = ? ");
           ps.setString(1,id);
        ps.execute();
        ps = db.getConnection().prepareStatement("insert into patient(patient_id,patient_fname,patient_lname,patient_mname,birthdate,address,gender) values (?,?,?,?,?,?,?)");
        ps.setString(1, list.get(0));
        ps.setString(2, list.get(1));
        ps.setString(3, list.get(2));
        ps.setString(4, list.get(3));
        ps.setString(5, list.get(4));
        ps.setString(6, list.get(5));
        ps.setString(7, list.get(6));
       ps.execute();
        }
        catch (SQLException ex)
        {
            Logger.getLogger(FifthForm.class.getName()).log(Level.SEVERE, null, ex);
        }
        }
        if(jRadioButton7.isSelected()){
            String id = jTable1.getValueAt(jTable1.getSelectedRow(), 0).toString() ;
            System.out.println(jTable1.getValueAt(jTable1.getSelectedRow(), 0));
            ArrayList<String> list = new ArrayList<String>();
            for(int i =0 ; i < jTable1.getColumnCount();i++){
                list.add(jTable1.getValueAt(jTable1.getSelectedRow(), i).toString());
            }
            PreparedStatement ps;
        try
        {
           ps = db.getConnection().prepareStatement("delete from records where id_record = ? ");
           ps.setString(1,id);
        ps.execute();
        ps = db.getConnection().prepareStatement("insert into records(id_record,patient,doct,paid_status,comp_status,comment,service,dat,tim,disc,act) values (?,?,?,?,?,?,?,?,?,?,?)");
        ps.setString(1, list.get(0));
        ps.setString(2, list.get(1));
        ps.setString(3, list.get(2));
        ps.setString(4, list.get(9));
        ps.setString(5, list.get(10));
        ps.setString(6, list.get(8));
        ps.setString(7, list.get(5));
        ps.setString(8, list.get(3));
        ps.setString(9, list.get(4));
        ps.setString(10, list.get(6));
        ps.setString(11, list.get(7));
       ps.execute();
        }
        catch (SQLException ex)
        {
            Logger.getLogger(FifthForm.class.getName()).log(Level.SEVERE, null, ex);
        }
        }
        if(jRadioButton8.isSelected()){
            String id = jTable1.getValueAt(jTable1.getSelectedRow(), 0).toString() ;
            System.out.println(jTable1.getValueAt(jTable1.getSelectedRow(), 0));
            ArrayList<String> list = new ArrayList<String>();
            for(int i =0 ; i < jTable1.getColumnCount();i++){
                list.add(jTable1.getValueAt(jTable1.getSelectedRow(), i).toString());
            }
            PreparedStatement ps;
        try
        {
           ps = db.getConnection().prepareStatement("delete from schedule where id_schedule = ? ");
           ps.setString(1,id);
        ps.execute();
        ps = db.getConnection().prepareStatement("insert into schedule(id_schedule,FIO_doct,sch_date,sch_time,status) values (?,?,?,?,?)");
        ps.setString(1, list.get(0));
        ps.setString(2, list.get(1));
        ps.setString(3, list.get(2));
        ps.setString(4, list.get(3));
        ps.setString(5, list.get(4));
       ps.execute();
        }
        catch (SQLException ex)
        {
            Logger.getLogger(FifthForm.class.getName()).log(Level.SEVERE, null, ex);
        }
        }
        if(jRadioButton9.isSelected()){
            String id = jTable1.getValueAt(jTable1.getSelectedRow(), 0).toString() ;
            System.out.println(jTable1.getValueAt(jTable1.getSelectedRow(), 0));
            ArrayList<String> list = new ArrayList<String>();
            for(int i =0 ; i < jTable1.getColumnCount();i++){
                list.add(jTable1.getValueAt(jTable1.getSelectedRow(), i).toString());
            }
            PreparedStatement ps;
        try
        {
           ps = db.getConnection().prepareStatement("delete from services where service_id = ? ");
           ps.setString(1,id);
        ps.execute();
        ps = db.getConnection().prepareStatement("insert into services(service_id,service_name,service_price,service_type) values (?,?,?,?)");
        ps.setString(1, list.get(0));
        ps.setString(2, list.get(1));
        ps.setString(3, list.get(2));
        ps.setString(4, list.get(3));
       ps.execute();
        }
        catch (SQLException ex)
        {
            Logger.getLogger(FifthForm.class.getName()).log(Level.SEVERE, null, ex);
        }
        }
    }//GEN-LAST:event_jButton2ActionPerformed

    private void jButton3ActionPerformed(java.awt.event.ActionEvent evt)//GEN-FIRST:event_jButton3ActionPerformed
    {//GEN-HEADEREND:event_jButton3ActionPerformed
        if(jRadioButton1.isSelected()){
            String id = jTable1.getValueAt(jTable1.getSelectedRow(), 0).toString() ;
            System.out.println(jTable1.getValueAt(jTable1.getSelectedRow(), 0));
            PreparedStatement ps;
        try
        {
           ps = db.getConnection().prepareStatement("delete from actions where act_id = ? ");
           ps.setString(1,id);
        ps.execute();
        }
        catch (SQLException ex)
        {
            Logger.getLogger(FifthForm.class.getName()).log(Level.SEVERE, null, ex);
        }
        }
        if(jRadioButton2.isSelected()){
            String id = jTable1.getValueAt(jTable1.getSelectedRow(), 0).toString() ;
            System.out.println(jTable1.getValueAt(jTable1.getSelectedRow(), 0));
            PreparedStatement ps;
        try
        {
           ps = db.getConnection().prepareStatement("delete from checks where id_check = ? ");
           ps.setString(1,id);
        ps.execute();
        }
        catch (SQLException ex)
        {
            Logger.getLogger(FifthForm.class.getName()).log(Level.SEVERE, null, ex);
        }
        }
        if(jRadioButton3.isSelected()){
            String id = jTable1.getValueAt(jTable1.getSelectedRow(), 0).toString() ;
            System.out.println(jTable1.getValueAt(jTable1.getSelectedRow(), 0));
            PreparedStatement ps;
        try
        {
           ps = db.getConnection().prepareStatement("delete from compl where id_compl = ? ");
           ps.setString(1,id);
        ps.execute();
        }
        catch (SQLException ex)
        {
            Logger.getLogger(FifthForm.class.getName()).log(Level.SEVERE, null, ex);
        }
        }
        if(jRadioButton4.isSelected()){
            String id = jTable1.getValueAt(jTable1.getSelectedRow(), 0).toString() ;
            System.out.println(jTable1.getValueAt(jTable1.getSelectedRow(), 0));
            PreparedStatement ps;
        try
        {
           ps = db.getConnection().prepareStatement("delete from discount where disc_id = ? ");
           ps.setString(1,id);
        ps.execute();
        }
        catch (SQLException ex)
        {
            Logger.getLogger(FifthForm.class.getName()).log(Level.SEVERE, null, ex);
        }
        }
        if(jRadioButton5.isSelected()){
            String id = jTable1.getValueAt(jTable1.getSelectedRow(), 0).toString() ;
            System.out.println(jTable1.getValueAt(jTable1.getSelectedRow(), 0));
            PreparedStatement ps;
        try
        {
           ps = db.getConnection().prepareStatement("delete from employee where id = ? ");
           ps.setString(1,id);
        ps.execute();
        }
        catch (SQLException ex)
        {
            Logger.getLogger(FifthForm.class.getName()).log(Level.SEVERE, null, ex);
        }
        }
        if(jRadioButton6.isSelected()){
            String id = jTable1.getValueAt(jTable1.getSelectedRow(), 0).toString() ;
            System.out.println(jTable1.getValueAt(jTable1.getSelectedRow(), 0));
            PreparedStatement ps;
        try
        {
           ps = db.getConnection().prepareStatement("delete from patient where patient_id = ? ");
           ps.setString(1,id);
        ps.execute();
        }
        catch (SQLException ex)
        {
            Logger.getLogger(FifthForm.class.getName()).log(Level.SEVERE, null, ex);
        }
        }
        if(jRadioButton7.isSelected()){
            String id = jTable1.getValueAt(jTable1.getSelectedRow(), 0).toString() ;
            System.out.println(jTable1.getValueAt(jTable1.getSelectedRow(), 0));
            PreparedStatement ps;
        try
        {
           ps = db.getConnection().prepareStatement("delete from records where id_record = ? ");
           ps.setString(1,id);
        ps.execute();
        }
        catch (SQLException ex)
        {
            Logger.getLogger(FifthForm.class.getName()).log(Level.SEVERE, null, ex);
        }
        }
        if(jRadioButton8.isSelected()){
            String id = jTable1.getValueAt(jTable1.getSelectedRow(), 0).toString() ;
            System.out.println(jTable1.getValueAt(jTable1.getSelectedRow(), 0));
            PreparedStatement ps;
        try
        {
           ps = db.getConnection().prepareStatement("delete from schedule where id_schedule = ? ");
           ps.setString(1,id);
        ps.execute();
        }
        catch (SQLException ex)
        {
            Logger.getLogger(FifthForm.class.getName()).log(Level.SEVERE, null, ex);
        }
        }
        if(jRadioButton9.isSelected()){
            String id = jTable1.getValueAt(jTable1.getSelectedRow(), 0).toString() ;
            System.out.println(jTable1.getValueAt(jTable1.getSelectedRow(), 0));
            PreparedStatement ps;
        try
        {
           ps = db.getConnection().prepareStatement("delete from services where service_id = ? ");
           ps.setString(1,id);
        ps.execute();
        }
        catch (SQLException ex)
        {
            Logger.getLogger(FifthForm.class.getName()).log(Level.SEVERE, null, ex);
        }
        }
    }//GEN-LAST:event_jButton3ActionPerformed

    private void jButton4ActionPerformed(java.awt.event.ActionEvent evt)//GEN-FIRST:event_jButton4ActionPerformed
    {//GEN-HEADEREND:event_jButton4ActionPerformed
       model1.addRow(new Object[]{});
    }//GEN-LAST:event_jButton4ActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[])
    {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try
        {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels())
            {
                if ("Nimbus".equals(info.getName()))
                {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        }
        catch (ClassNotFoundException ex)
        {
            java.util.logging.Logger.getLogger(FifthForm.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        catch (InstantiationException ex)
        {
            java.util.logging.Logger.getLogger(FifthForm.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        catch (IllegalAccessException ex)
        {
            java.util.logging.Logger.getLogger(FifthForm.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        catch (javax.swing.UnsupportedLookAndFeelException ex)
        {
            java.util.logging.Logger.getLogger(FifthForm.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable()
        {
            public void run()
            {
                new FifthForm().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.ButtonGroup buttonGroup1;
    private javax.swing.JButton jButton1;
    private javax.swing.JButton jButton2;
    private javax.swing.JButton jButton3;
    private javax.swing.JButton jButton4;
    private javax.swing.JRadioButton jRadioButton1;
    private javax.swing.JRadioButton jRadioButton2;
    private javax.swing.JRadioButton jRadioButton3;
    private javax.swing.JRadioButton jRadioButton4;
    private javax.swing.JRadioButton jRadioButton5;
    private javax.swing.JRadioButton jRadioButton6;
    private javax.swing.JRadioButton jRadioButton7;
    private javax.swing.JRadioButton jRadioButton8;
    private javax.swing.JRadioButton jRadioButton9;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTable jTable1;
    // End of variables declaration//GEN-END:variables
}
